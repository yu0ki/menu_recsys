# Generated by Django 4.2 on 2023-05-23 09:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import multiselectfield.validators


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("user_account", models.CharField(max_length=16, unique=True)),
                ("user_name", models.CharField(max_length=32)),
                (
                    "user_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("age", models.PositiveSmallIntegerField(blank=True, null=True)),
                ("height", models.PositiveSmallIntegerField(blank=True, null=True)),
                ("weight", models.PositiveSmallIntegerField(blank=True, null=True)),
                ("petstatus", models.PositiveSmallIntegerField(blank=True, null=True)),
                (
                    "gender",
                    models.PositiveSmallIntegerField(
                        blank=True, choices=[(1, "男"), (2, "女"), (3, "その他")], null=True
                    ),
                ),
                (
                    "target",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[(1, "ダイエット"), (2, "現状を維持する"), (3, "体重を増やしたい")],
                        null=True,
                    ),
                ),
                (
                    "allergen",
                    multiselectfield.db.fields.MultiSelectField(
                        choices=[
                            (1, "卵"),
                            (2, "牛乳"),
                            (3, "落花生"),
                            (4, "そば"),
                            (5, "小麦"),
                            (6, "えび"),
                            (7, "かに"),
                            (8, "あわび"),
                            (9, "いか"),
                            (10, "いくら"),
                            (11, "さけ"),
                            (12, "さば"),
                            (13, "牛肉"),
                            (14, "鶏肉"),
                            (15, "豚肉"),
                            (16, "大豆"),
                            (17, "松茸"),
                            (18, "山芋"),
                            (19, "オレンジ"),
                            (20, "桃"),
                            (21, "キウイフルーツ"),
                            (22, "りんご"),
                            (23, "くるみ"),
                            (24, "ゼラチン"),
                            (25, "バナナ"),
                            (26, "ゴマ"),
                            (27, "カシューナッツ"),
                        ],
                        max_length=71,
                        validators=[
                            multiselectfield.validators.MaxValueMultiFieldValidator(27)
                        ],
                    ),
                ),
                (
                    "momentum",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (1, "運動はほぼしない 生活の大部分が座位"),
                            (2, "普通 座位中心、通勤・通学・家事での移動、軽いスポーツをしている"),
                            (3, "活発 移動が多い、立ち仕事、運動習慣あり"),
                        ],
                        null=True,
                    ),
                ),
                ("create_time", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Canteen",
            fields=[
                (
                    "canteen_id",
                    models.CharField(
                        max_length=8,
                        primary_key=True,
                        serialize=False,
                        verbose_name="食堂ID",
                    ),
                ),
                (
                    "canteen_name",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "中央食堂"), (2, "北部食堂"), (3, "吉田食堂"), (4, "ルネ")],
                        default=1,
                        verbose_name="食堂名",
                    ),
                ),
                (
                    "canteen_location",
                    models.CharField(max_length=64, verbose_name="食堂の場所"),
                ),
                ("canteen_url", models.URLField(verbose_name="食堂リンク")),
            ],
        ),
        migrations.CreateModel(
            name="Menu",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dish_url", models.URLField(verbose_name="料理のリンク")),
                (
                    "dish_name",
                    models.CharField(
                        default="Unknown", max_length=64, verbose_name="料理名"
                    ),
                ),
                (
                    "dish_en_name",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="英語の料理名"
                    ),
                ),
                (
                    "image_url",
                    models.URLField(blank=True, null=True, verbose_name="商品画像のリンク"),
                ),
                (
                    "price",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="組価(税込)"
                    ),
                ),
                (
                    "energy",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="エネルギー"
                    ),
                ),
                (
                    "protein",
                    models.FloatField(blank=True, null=True, verbose_name="タンパク質"),
                ),
                ("fat", models.FloatField(blank=True, null=True, verbose_name="脂質")),
                (
                    "carbohydrates",
                    models.FloatField(blank=True, null=True, verbose_name="炭水化物"),
                ),
                (
                    "salt",
                    models.FloatField(blank=True, null=True, verbose_name="食塩相当量"),
                ),
                (
                    "calcium",
                    models.IntegerField(blank=True, null=True, verbose_name="カルシウム"),
                ),
                ("veg", models.IntegerField(blank=True, null=True, verbose_name="野菜量")),
                ("iron", models.FloatField(blank=True, null=True, verbose_name="鉄")),
                (
                    "vitamin_a",
                    models.IntegerField(blank=True, null=True, verbose_name="ビタミン A"),
                ),
                (
                    "vitamin_b1",
                    models.FloatField(blank=True, null=True, verbose_name="ビタミン B1"),
                ),
                (
                    "vitamin_b2",
                    models.FloatField(blank=True, null=True, verbose_name="ビタミン B2"),
                ),
                (
                    "vitamin_c",
                    models.IntegerField(blank=True, null=True, verbose_name="ビタミン C"),
                ),
                (
                    "place_of_origin",
                    models.CharField(
                        blank=True, default="Unknown", max_length=64, verbose_name="原産地"
                    ),
                ),
                (
                    "allergies",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="アレルギー"
                    ),
                ),
                (
                    "canteen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="menu_recsys.canteen",
                        verbose_name="食堂ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="History_order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_date", models.DateField(auto_now_add=True, verbose_name="注文日")),
                (
                    "dish",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="menu_recsys.menu",
                        verbose_name="料理ID",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="ユーザID",
                    ),
                ),
            ],
        ),
    ]
